name: Build Snowcaller

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger option

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Match your preferred version

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests

      # Build with PyInstaller (cross-platform command adjustment)
      - name: Build executable
        run: |
          pyinstaller --onefile \
            --add-data "art${{ matrix.os == 'windows-latest' && ';' || ':' }}art" \
            --add-data "NPC${{ matrix.os == 'windows-latest' && ';' || ':' }}NPC" \
            --add-data "consumables.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "event.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "gear.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "keyitems.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "lore.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "monster.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "npcs.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "quest.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "skills.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "treasures.json${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --add-data "locations.txt${{ matrix.os == 'windows-latest' && ';' || ':' }}." \
            --hidden-import "requests" \
            --name Snowcaller game.py

      # Upload the executable as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Snowcaller-${{ matrix.os }}
          path: dist/Snowcaller*
